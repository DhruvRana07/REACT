{"ast":null,"code":"var _jsxFileName = \"D:\\\\Event Handler\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Post from \"./components/Post\";\nimport \"./components/post.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst POSTS_PER_PAGE = 10;\nconst MAX_VISIBLE_PAGES = 5; // Maximum number of visible page numbers\n\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dataFetched, setDataFetched] = useState(false); // Track if data has been fetched\n\n  useEffect(() => {\n    if (dataFetched) {\n      fetchPosts();\n    }\n  }, [dataFetched]);\n  const fetchPosts = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const data = await response.json();\n      setPosts(data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n    setLoading(false);\n  };\n  const handleGetPosts = () => {\n    setDataFetched(true); // Trigger fetching data when button is clicked\n  };\n  const handleNextPage = () => {\n    if (currentPage * POSTS_PER_PAGE < posts.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const handlePageClick = page => {\n    setCurrentPage(page);\n  };\n  const generatePageNumbers = () => {\n    const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE);\n    const currentPageIndex = currentPage - 1;\n    if (totalPages <= MAX_VISIBLE_PAGES) {\n      return Array.from({\n        length: totalPages\n      }, (_, index) => index + 1);\n    } else {\n      const startPage = Math.max(0, currentPageIndex - Math.floor(MAX_VISIBLE_PAGES / 2));\n      let endPage = startPage + MAX_VISIBLE_PAGES - 1;\n      if (endPage >= totalPages - 1) {\n        endPage = totalPages - 1;\n        return Array.from({\n          length: MAX_VISIBLE_PAGES\n        }, (_, index) => totalPages - MAX_VISIBLE_PAGES + 1 + index);\n      } else {\n        return Array.from({\n          length: MAX_VISIBLE_PAGES\n        }, (_, index) => startPage + 1 + index);\n      }\n    }\n  };\n  const startIndex = (currentPage - 1) * POSTS_PER_PAGE;\n  const displayedPosts = posts.slice(startIndex, startIndex + POSTS_PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fetch-data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-data-button\",\n      onClick: handleGetPosts,\n      children: \"GET POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), dataFetched && posts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: displayedPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n          id: startIndex + index + 1,\n          title: post.title,\n          body: post.body\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: handlePreviousPage,\n          disabled: currentPage === 1,\n          children: \"< Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), generatePageNumbers().map((page, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-number \".concat(page === currentPage ? \"active\" : \"\"),\n          onClick: () => handlePageClick(page),\n          children: typeof page === \"number\" ? page : \"...\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: handleNextPage,\n          disabled: currentPage * POSTS_PER_PAGE >= posts.length,\n          children: \"Next >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F9ddd3hJKi6jmFghOOulcGMGW0s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","POSTS_PER_PAGE","MAX_VISIBLE_PAGES","App","_s","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","dataFetched","setDataFetched","fetchPosts","response","fetch","data","json","error","console","handleGetPosts","handleNextPage","length","handlePreviousPage","handlePageClick","page","generatePageNumbers","totalPages","Math","ceil","currentPageIndex","Array","from","_","index","startPage","max","floor","endPage","startIndex","displayedPosts","slice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","title","body","disabled","concat","_c","$RefreshReg$"],"sources":["D:/Event Handler/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Post from \"./components/Post\";\nimport \"./components/post.css\";\n\nconst POSTS_PER_PAGE = 10;\nconst MAX_VISIBLE_PAGES = 5; // Maximum number of visible page numbers\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dataFetched, setDataFetched] = useState(false); // Track if data has been fetched\n\n  useEffect(() => {\n    if (dataFetched) {\n      fetchPosts();\n    }\n  }, [dataFetched]);\n\n  const fetchPosts = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts\"\n      );\n      const data = await response.json();\n      setPosts(data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n    setLoading(false);\n  };\n\n  const handleGetPosts = () => {\n    setDataFetched(true); // Trigger fetching data when button is clicked\n  };\n\n  const handleNextPage = () => {\n    if (currentPage * POSTS_PER_PAGE < posts.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handlePageClick = (page) => {\n    setCurrentPage(page);\n  };\n\n  const generatePageNumbers = () => {\n    const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE);\n    const currentPageIndex = currentPage - 1;\n\n    if (totalPages <= MAX_VISIBLE_PAGES) {\n      return Array.from({ length: totalPages }, (_, index) => index + 1);\n    } else {\n      const startPage = Math.max(\n        0,\n        currentPageIndex - Math.floor(MAX_VISIBLE_PAGES / 2)\n      );\n      let endPage = startPage + MAX_VISIBLE_PAGES - 1;\n\n      if (endPage >= totalPages - 1) {\n        endPage = totalPages - 1;\n        return Array.from(\n          { length: MAX_VISIBLE_PAGES },\n          (_, index) => totalPages - MAX_VISIBLE_PAGES + 1 + index\n        );\n      } else {\n        return Array.from(\n          { length: MAX_VISIBLE_PAGES },\n          (_, index) => startPage + 1 + index\n        );\n      }\n    }\n  };\n\n  const startIndex = (currentPage - 1) * POSTS_PER_PAGE;\n  const displayedPosts = posts.slice(startIndex, startIndex + POSTS_PER_PAGE);\n\n  return (\n    <div className=\"fetch-data-container\">\n      <button className=\"show-data-button\" onClick={handleGetPosts}>\n        GET POSTS\n      </button>\n      {loading && (\n        <div className=\"loading\">\n          <div className=\"loading-spinner\"></div>\n          Loading...\n        </div>\n      )}\n      {dataFetched && posts.length > 0 && (\n        <>\n          <div className=\"post-list\">\n            {displayedPosts.map((post, index) => (\n              <Post\n                key={post.id}\n                id={startIndex + index + 1}\n                title={post.title}\n                body={post.body}\n              />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            <button\n              className=\"pagination-button\"\n              onClick={handlePreviousPage}\n              disabled={currentPage === 1}\n            >\n              &lt; Prev\n            </button>\n            {generatePageNumbers().map((page, index) => (\n              <button\n                key={index}\n                className={`pagination-number ${\n                  page === currentPage ? \"active\" : \"\"\n                }`}\n                onClick={() => handlePageClick(page)}\n              >\n                {typeof page === \"number\" ? page : \"...\"}\n              </button>\n            ))}\n            <button\n              className=\"pagination-button\"\n              onClick={handleNextPage}\n              disabled={currentPage * POSTS_PER_PAGE >= posts.length}\n            >\n              Next &gt;\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}